<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2012 Christian Sterzl <christian.sterzl@gmail.com>

    This file is part of ValidationConstraints.

    ValidationConstraints is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    ValidationConstraints is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with ValidationConstraints.  If not, see <http://www.gnu.org/licenses/>.

-->
<document>
    <properties>
        <author>Christian Sterzl</author>
        <title>JSR-303 validation constraints</title>
    </properties>
    <meta name="keyword" content="beanvalidation, java, jsr303"/>
    <body>
        <section name="Important Maven Commands">
        	<subsection name="Signing">
				<p>
				For signing your build with gpg use the profile <code>-Prelease-sign-artifacts</code>.
        		</p>
        	</subsection>
			<subsection name="Deployment">
				<p>
				For deploying the site to <a href="http://oss.sonatype.org">Sonatype</a> use following command:
        		</p>
        		<source>mvn clean deploy -Prelease-sign-artifacts</source>
        	</subsection>
        	<subsection name="Github">
				<p>
				For deploying the artifact to the uploads section of github.com use:
        		</p>
        		<source>mvn clean install ghDownloads:upload</source>
        		<p>
        		For uploading the site to github pages use:
        		</p>
        		<source>mvn site -Pupload-github-site</source>
        	</subsection>
        	<subsection name="Site">
				<p>
				For site generation use:
        		</p>
        		<source>mvn site</source>
        	</subsection>
        	<subsection name="Javadoc">
				<p>
				For javadoc generation use:
        		</p>
        		<source>mvn javadoc:javadoc</source>
        	</subsection>
        	<subsection name="License Header Generation">
				<p>
				For generate the license headers use:
        		</p>
        		<source>mvn license:format</source>
        	</subsection>
        </section>
        <section name="Making a release">
        	<p>
        		Prepare the release by setting the version in the pom.xml.
        	</p>
        	<p>
        		Before creating the release first tag the current version.
        		<source>git tag -a vX.Y.Z -m "Release Version X.Y.Z"</source>
        		Control the creation of the tag by executing following commands:
        		<source>git show vX.Y.Z</source>
        		and
        		<source>git describe --tags</source>
        	</p>
        	<p>
        		If neccessary commit the last changes with 
        		<source>git tag -a vX.Y.Z -m "Release Version X.Y.Z"</source>
        	</p>
        	<p>
        		Now the tag can be pushed to github by invoking following command:
        		<source>git push --tags</source>
        	</p>
        	<p>
        		For non-maven-users an upload at github should be provided and the page should be the current one,
        		thus invoke following commands:
<source>mvn clean install ghDownloads:upload
mvn site -Pupload-github-site</source>

In the future this step will be obsolete. Please read <a href="https://github.com/blog/1302-goodbye-uploads">https://github.com/blog/1302-goodbye-uploads</a>.
        	</p>
        	<p>
        	Now you can finally sign and release the artifacts.
        	<source>mvn clean deploy -Prelease-sign-artifacts</source>
        	After this step log in to <a href="https://oss.sonatype.org/">https://oss.sonatype.org/</a> and navigate to <em>Staging Repositories</em>.
        	<br/>
        	Choose your just created repository and close it. Give a description to it like "Release Version X.Y.Z".
        	<br/>
        	Now choose your closed repository and release it. Give a description to it like "Release Version X.Y.Z".
        	</p>
        	<p>
        	Now you're done. The artifact should be after about 2 hours be visible in the central repository.
        	</p>
        	<p>
        	Now start the next version in the pom by incrementing the version and appending "-SNAPSHOT".
        	</p>
        </section>
        
    </body>
</document>